[include mainsail.cfg]
[include KAMP_Settings.cfg]
[include sb2209-1.cfg]        ##EBB SB2209 File

# This file contains common pin mappings for the Voron Leviathan V1.1
# To use this config, the firmware should be compiled for the STM32F446 with "No bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON 2 250/300/350mm Leviathan V1.1 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

#####################################################################

[exclude_object]

#####################################################################
#   Shaketune Parameters
#####################################################################

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
# number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

[adxl345] # replace "adxl345" by your correct accelerometer name
axes_map: -z,y,x

[input_shaper]
shaper_freq_x: 44.8 # center frequency for the X axis filter
shaper_type_x: mzv # filter type for the X axis
shaper_freq_y: 34.0 # center frequency for the Y axis filter
shaper_type_y: mzv # filter type for the Y axis
damping_ratio_x: 0.048 # damping ratio for the X axis
damping_ratio_y: 0.062 # damping ratio for the Y axis
#####################################################################
#   FYSETC NOZZLE ADXL USB
#####################################################################

# [mcu NIS]
# # Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
# serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_27001E00044330534E373720-if00

# [adxl345]
# cs_pin: NIS:PA4
# spi_software_sclk_pin: NIS:PA5
# spi_software_mosi_pin: NIS:PA7
# spi_software_miso_pin: NIS:PA6

[resonance_tester]
accel_chip: adxl345
probe_points:
    195,195,20 # an example - set this to the centre of your BED.

######################################################################
#    Temp Sensors
######################################################################

[temperature_sensor 01_Chamber_-_Top]
sensor_type: Generic 3950
sensor_pin: PA2
pullup_resistor: 2200

[temperature_sensor 02_Chamber_-_Toolhead]
sensor_type: Generic 3950
sensor_pin: EBBCan:PA3

[temperature_sensor 03_Chamber_-_Fltr]
sensor_type: Generic 3950
sensor_pin: PA3
pullup_resistor: 2200

[temperature_sensor 04_Room_Temp]
sensor_type: Generic 3950
sensor_pin: PA0
pullup_resistor: 2200

[temperature_sensor 06_leviathan_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor 07_pi_temp]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

######################################################################

[firmware_retraction]
retract_length: .5
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 20
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

######################################################################

#[mcu]
[mcu]
canbus_uuid: e85bcfeb114b

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 6000
max_z_velocity: 20          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to HV STEPPER 0
##  Endstop connected to X-ENDSTOP
[stepper_x]
step_pin: PB10
dir_pin: !PB11
enable_pin: !PG0
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 200 for 1.8 degree stepper
endstop_pin: EBBCan:PB6
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 390mm build
position_endstop: 390
position_max: 390

##--------------------------------------------------------------------
homing_speed: 50   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc5160 stepper_x]
cs_pin: PE15
spi_bus: spi4
#diag0_pin: ^!PG1
interpolate: false
run_current: 0.8
sense_resistor: 0.075
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to HV STEPPER 1
##  Endstop connected to Y-ENDSTOP
[stepper_y]
step_pin: PF15
dir_pin: !PF14
enable_pin: !PE9
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 200 for 1.8 degree stepper
endstop_pin: PC2
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 390mm build
position_endstop: 390
position_max: 390

##--------------------------------------------------------------------
homing_speed: 50  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc5160 stepper_y]
cs_pin: PE11
spi_bus: spi4
#diag0_pin: ^!PE10
interpolate: false
run_current: 0.8
sense_resistor: 0.075
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to STEPPER 0
##  Endstop connected to Z-ENDSTOP
[stepper_z]
step_pin: PD4
dir_pin: !PD3
enable_pin: !PD7
rotation_distance: 40
gear_ratio: 80:16  
microsteps: 32
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
# position_endstop: -0.5
##--------------------------------------------------------------------

##  Uncomment below for 400mm build
position_max: 400

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z]
uart_pin: PD5
#diag_pin: ^!PD6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to STEPPER 1
[stepper_z1]
step_pin: PC12
dir_pin: PC11
enable_pin: !PD2
rotation_distance: 40
gear_ratio: 80:16 
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z1]
uart_pin: PD0
#diag_pin: ^!PD1
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to STEPPER 2
[stepper_z2]
step_pin: PC9
dir_pin: !PC8
enable_pin: !PC10
rotation_distance: 40
gear_ratio: 80:16 
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z2]
uart_pin: PA8
#diag_pin: ^!PA15
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to STEPPER 3
[stepper_z3]
step_pin: PG7
dir_pin: PG6
enable_pin: !PC7
rotation_distance: 40
gear_ratio: 80:16 
microsteps: 32

##  Make sure to update below for your relevant driver (2209 or 5160)
[tmc2209 stepper_z3]
uart_pin: PG8
#diag_pin: ^!PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Extruder
#####################################################################

##  Connected to STEPPER 0
##  Heater - HEATER
##  Thermistor - TH0
[extruder]
# step_pin: PD10
# dir_pin: PD9
# enable_pin: !PD13
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
# rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
# gear_ratio: 50:10               #BMG Gear Ratio
# microsteps: 32
# full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
# nozzle_diameter: 0.400
# filament_diameter: 1.75
# heater_pin: PG10
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
#sensor_type:
# sensor_pin: PA1 #TH0
# pullup_resistor: 2200
# min_temp: 10
# max_temp: 270
# max_power: 1.0
# min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
#pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Connected to STEPPER 4
# [tmc2209 extruder]
# uart_pin: PD11
# interpolate: false
# run_current: 0.5
# sense_resistor: 0.110
# stealthchop_threshold: 0

## For KAMP
max_extrude_cross_section: 5

#####################################################################
#   LEDs
#####################################################################

[led Chamber_Lights]
#red_pin:
#green_pin:
#blue_pin:
white_pin: PE6
#   The pin controlling the given LED color. At least one of the above
#   parameters must be provided.
#cycle_time: 0.010
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.010 seconds.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
initial_WHITE: 1.0
#   Sets the initial LED color. Each value should be between 0.0 and
#   1.0. The default for each color is 0.


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HEATBED
##  Thermistor - TH1
heater_pin: PG11
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PA1
pullup_resistor: 2200
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: .9
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

# Anti flicker config: https://github.com/cat40/random-electronic-stuff/blob/master/ssr-flicker-reduction/ssr-flicker-reduction.md
# pwm_cycle_time: 0.02227 #44.9Hz
pwm_cycle_time: 0.02088 #47.9Hz

#####################################################################
#   Probe
#####################################################################

[probe]
##  Inductive Probe
##  Connected to Z-PROBE
##  This probe is not used for Z height, only Quad Gantry Leveling
#pin: ^PF1
pin: EBBCan:PB5
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 10
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.0075
samples_tolerance_retries: 3

# OptoTap
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    
#####################################################################
#   Bed Mesh
#####################################################################

[bed_mesh]
speed: 300
horizontal_move_z: 10
##--------------------------------------------------------------------

##	Uncomment for 390mm build
mesh_min: 40, 40
mesh_max: 350,350
zero_reference_position: 195,195 #for use with stock z endstop

##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5 # Values should be odd, so one point is directly at bed center
algorithm: bicubic


#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN0
#pin: PB7
##tachometer_pin: PB0
#kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
#off_below: 0.10

# [heater_fan hotend_fan]
# ##  Hotend Fan - FAN1
# pin: PB3
# ##tachometer_pin: PB4
# max_power: 1.0
# kick_start_time: 0.5
# heater: extruder
# heater_temp: 50.0
# ##  If you are experiencing back flow, you can reduce fan_speed
# #fan_speed: 1.0

[controller_fan Electronics_Fans]
##  Controller fan - FAN2
pin: PB7
##tachometer_pin: PF6
kick_start_time: 0.5
heater: heater_bed
fan_speed: .75

[fan_generic The_Filter]
pin: PB3
max_power: 1
#shutdown_speed:
cycle_time: 0.010
#hardware_pwm:
#kick_start_time:
off_below: 0.1
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.

#[heater_fan exhaust_fan]
##  Exhaust fan - FAN3
#pin: PF9
##tachometer_pin: PF8
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
#   Filament sensor
#####################################################################

[filament_switch_sensor RUNOUT_SENSOR]
pause_on_runout: True
runout_gcode: PAUSE
insert_gcode:
event_delay: 3.0
pause_delay: 0.5
switch_pin: PC0

#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting (Optional)
## Connected to LED-STRIP
#[output_pin caselight]
#pin: PE6
#pwm:true
#hardware_pwm: False
#value: 0.20 #startup value
#shutdown_value: 0
#value:1
#cycle_time: 0.00025

## Neopixel (Optional)
## Connected to NEOPIXEL
# [neopixel rgb_light]
# pin: PF10
# chain_count: 3
# color_order: GRBW
# initial_RED: 0.0
# initial_GREEN: 0.0
# initial_BLUE: 0.0
# initial_WHITE: 0.0

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position:195,195
speed:100
z_hop:10

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
##  Gantry Corners for 390mm Build
gantry_corners:
   -60,-0
   450,460
##  Probe points
points:
   50,25
   50,365
   340,365
   340,25
   
#--------------------------------------------------------------------

speed: 100
horizontal_move_z: 10
retries: 10
retry_tolerance: 0.0075
max_adjust: 10

##--------------------------------------------------------------------

speed: 200
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PG9, EXP1_2=PG12,
    EXP1_3=PG13, EXP1_4=PG14,
    EXP1_5=PC13, EXP1_6=PC14,    # Slot in the socket on this side
    EXP1_7=PC15, EXP1_8=PF0,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PE2, EXP2_4=PE4,
    EXP2_5=PE3, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PE5, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PE4

#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------

[display]
##  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
       SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
       SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

[output_pin BEEPER_pin]
pin: PG9
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001



#--------------------------------------------------------------------


#####################################################################
#   Macros
#####################################################################

[gcode_macro _BEEP]
gcode:
    {% set S = params.S|default(1000)|int %}
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.85 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

#     # this is the two-stage QGL macro
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: BASE_QUAD_GANTRY_LEVEL
gcode:
    # Pass 1: Initial Coarse Leveling
    BASE_QUAD_GANTRY_LEVEL HORIZONTAL_MOVE_Z=10 RETRY_TOLERANCE=1
    # Pass 2: Fine Leveling and Accuracy
    BASE_QUAD_GANTRY_LEVEL HORIZONTAL_MOVE_Z=2

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    G28
    ##  Uncomment for for your size printer:
    #--------------------------------------------------------------------
      ##  Uncomment for 390mm build
    G0 X195 Y195 Z30 F3600
    #--------------------------------------------------------------------
    RESTORE_GCODE_STATE NAME=STATE_G32


[gcode_macro AA_Filament_Change_Position]
gcode:
    g1 x150 y10 z150 f4000
    _BEEP

[gcode_macro AB_Move_To_Center]
gcode:
    g1 x195 y195 f4000
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP} 

    G32                            ; home all axes
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed


    BED_MESH_CLEAR
    BED_MESH_CALIBRATE ADAPTIVE=1
    
    Smart_Park
    
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}                         					# Set extruder temp
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP} 
    LINE_PURGE
   

# [gcode_macro PRINT_END]
# #   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
# gcode:
#     {% set th = printer.toolhead %}
#     {% set z_safe_height = th.position.z %}

#     SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
#     M400                           ; wait for buffer to clear
#     G92 E0                         ; zero the extruder
#     G1 E-5.0 F1800                 ; retract filament
    
#     TURN_OFF_HEATERS

#     {% if z_safe_height < 150 %}
#       AA_Filament_Change_Position
      
#     {% else %}
#       G91          ;relative positioning
#       G1 Z10 F4000 ;move z up 10mm
#       G90          ; absolute positioning
#       G1 X150 Y10 F4000 ;move toolhead to filament change position
#       _BEEP
#     {% endif %}
    

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set z_safe_height = th.position.z %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan

    {% if z_safe_height < 150 %}
      AA_Filament_Change_Position
      
    {% else %}
      G91          ;relative positioning
      G1 Z10 F4000 ;move z up 10mm
      G90          ; absolute positioning
      G1 X150 Y10 F4000 ;move toolhead to filament change position
      _BEEP
    {% endif %}
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    
## Z OFFSET - CLOSER TO 0 is CLOSER to the bed

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -1.498
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 43.968
#*# pid_ki = 1.320
#*# pid_kd = 366.036
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 30.669
#*# pid_ki = 7.302
#*# pid_kd = 32.203
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.003303, -0.010447, -0.012947
#*# 	  0.000803, 0.000803, -0.000447
#*# 	  0.065803, 0.050803, 0.043303
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 166.791
#*# max_x = 244.911
#*# min_y = 145.791
#*# max_y = 248.211
